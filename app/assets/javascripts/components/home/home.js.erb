angular
  .module('eventPlanner')
  .component('home', {
    templateUrl: '<%= asset_path("components/home/home") %>',
    controller: HomeController
  });

HomeController.$inject = ['$sce','EventService','LocationService'];

function HomeController($sce, EventService, LocationService) {
  var vm = this;

  vm.categories = [];
	vm.categoryDisabled = true;
  vm.currentLocation = "Getting current location..";
  vm.eventsList = [];

	vm.latLng = '';

	// Map variables
	vm.mapLatLng
	vm.mapZoom = 1;

	vm.defaultLatLng;
	vm.defaultZoom;

  vm.selectedCategory = "";

  vm.getEventsForCategory = getEventsForCategory;
	vm.moveMapToEvent = moveMapToEvent;

  activate();

  function activate() {
    EventService
      .getCategories()
      .then(updateCategories);

    LocationService
      .getUserLocation()
      .then(reverseGeocodeLocation);
  }
  function reverseGeocodeLocation(position) {
    const latitude = position.coords.latitude;
    const longitude = position.coords.longitude;
    vm.latLng = `${latitude}, ${longitude}`;

		// Recenter map
		vm.defaultLatLng = vm.latLng;
		vm.defaultZoom = 11;

		vm.mapLatLng = vm.defaultLatLng;
		vm.mapZoom = vm.defaultZoom;

		// Enabling category selector here now that we have an accurate postion
		vm.categoryDisabled = false;

    LocationService
      .reverseGeocodeLocation(vm.latLng)
      .then(function setCurrentLocation(response) {
        vm.currentLocation = response.data.results[4].formatted_address;
      })
  }
  function updateCategories(categories) {

    vm.categories = [];
    categories.data.forEach(function(category) {
      vm.categories.push(category);
    });
  }
  function getEventsForCategory() {
    EventService
      .getEventsForCategory(vm.latLng, vm.selectedCategory)
      .then(updateEventsList, displayErrorMessage);
  }
  function updateEventsList(events) {
    vm.eventsList = [];
    events.data.forEach(function(event) {
      vm.eventsList.push(event);
    });
		// Reset map to default
		vm.mapLatLng = vm.defaultLatLng;
		vm.mapZoom = vm.defaultZoom;

  }
	function displayErrorMessage(error) {
		console.log(error);
	}
	function moveMapToEvent(event) {
		vm.mapLatLng = `${event.latitude}, ${event.longitude}`
		vm.mapZoom = 15;
	}

}
