angular
  .module('eventPlanner')
  .component('eventShow', {
    templateUrl: '<%= asset_path("components/event/show/eventShow") %>',
    controller: EventShowController
  });

EventShowController.$inject = ['$rootScope','$state','$stateParams', 'CommentService', 'EventService', 'FavoriteService','UserService'];

function EventShowController($rootScope, $state, $stateParams, CommentService, EventService, FavoriteService, UserService) {
  var vm = this;

  vm.comments = [];
	vm.currentUser = {};
	vm.event = {};
	vm.favorite = {}
  vm.newComment = {};

	vm.addToCommentsArray = addToCommentsArray;
	vm.commentSubmit = commentSubmit;
	vm.deleteComment = deleteComment;
	vm.getEvent = getEvent;
	vm.getLoggedInUser = getLoggedInUser;
	vm.toggleFavorite = toggleFavorite;

	activate()

	function activate() {
		getEvent()
		getLoggedInUser()
	}

  function commentSubmit(){
    CommentService
      .postComment(vm.newComment, $stateParams.id)
      .then(function assignComments(response){
				vm.comments = [];
				response.data.comments.forEach(addToCommentsArray)
				vm.newComment = {};
      })
  }
	function deleteComment(id) {
		CommentService
			.deleteComment($stateParams.id, id)
			.then(function(response) {
				vm.comments = [];
				response.data.comments.forEach(addToCommentsArray)
			});
	}
	function getEvent() {
    EventService
			.getEvent($stateParams.id)
			.then(function assignEvent(response) {
				console.log(response.data)

				vm.event = response.data.eventful;
				vm.event.start_time = new Date(response.data.eventful.start_time);
				vm.favorite = response.data.favorite;

				vm.comments = [];
				response.data.comments.forEach(addToCommentsArray)
			})
	}
	function getLoggedInUser() {
		UserService
			.getLoggedInUser()
			.then(function(response) {
				vm.currentUser = response.data.current_user;
			})
	}
	function toggleFavorite() {
		if (vm.favorite) {
			FavoriteService
				.removeFavorite($stateParams.id, vm.favorite.activity_id)
				.then(function(response) {
					console.log(response.data)
					vm.favorite = response.data.favorite;
				})
		} else {
			FavoriteService
				.addFavorite($stateParams.id)
				.then(function(response) {
					console.log(response.data)
					vm.favorite = response.data.favorite;
				})
		}
	}
	function addToCommentsArray(comment) {
		vm.comments.push(comment);
	}
}
